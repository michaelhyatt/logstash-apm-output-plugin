---
version: '3.6'
services:
  # The environment variable "TAG" is used throughout this file to
  # specify the version of the images to run. The default is set in the
  # '.env' file in this folder. It can be overridden with any normal
  # technique for setting environment variables, for example:
  #
  #   TAG=6.0.0-beta1 docker-compose up
  #
  # REF: https://docs.docker.com/compose/compose-file/#variable-substitution
  #
  # Also be sure to set the ELASTIC_VERSION variable. For released versions,
  # ${TAG} and ${ELASTIC_VERSION} will be identical, but for pre-release
  # versions, ${TAG} might contain an extra build identifier, like
  # "6.0.0-beta1-3eab5b40", so a full invocation might look like:
  #
  #   ELASTIC_VERSION=6.0.0-beta1 TAG=6.0.0-beta1-3eab5b40 docker-compose up
  #
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${TAG}
    container_name: elasticsearch
    ports: ['9200:9200']
    networks: ['stack']
    # volumes:
    #   - ./snapshots:/snapshots:rw
    environment:
      # - path.repo=/snapshots
      - node.name=elastic-node-1
      - cluster.initial_master_nodes=elastic-node-1

  kibana:
    image: docker.elastic.co/kibana/kibana:${TAG}
    container_name: kibana
    ports: ['5601:5601']
    networks: ['stack']
    depends_on: ['elasticsearch']

  apm-server:
    image: docker.elastic.co/apm/apm-server:${TAG}
    container_name: apm_server
    ports: ['8200:8200']
    networks: ['stack']
    command: --strict.perms=false -e  # -e flag to log to stderr and disable syslog/file output
    depends_on: ['elasticsearch', 'kibana']

  jenkins:
    image: jenkins/jenkins:lts
    environment:
      JAVA_OPTS: "-Djava.awt.headless=true"
    networks: ['stack']
    ports:
      - "50000:50000"
      - "8080:8080"
    volumes:
      - /var/jenkins_home

  logstash:
#    image: docker.elastic.co/logstash/logstash:${TAG}
    build:
      context: ..
      dockerfile: jenkins-docker/Dockerfile
      args:
        - tag=${TAG}
    container_name: logstash
    ports: ['3131:3131']
    networks: ['stack']
    volumes:
      - ../example_logstash_configs/jenkins/config:/usr/share/logstash/config:ro
      - ../example_logstash_configs/jenkins/pipeline:/usr/share/logstash/pipeline:ro
    command: -f /usr/share/logstash/pipeline/logstash.conf -r -w 1

networks: {stack: {}}
# use docker volume to persist ES data outside of a container.
#volumes:
#  es_data:
